{
  "name": "nakadi-java",
  "tagline": "ðŸŒ€ A client library for the Nakadi Event Broker",
  "body": "## Welcome!\r\n\r\nNakadi-java provides an implementation of the Nakadi Event Broker API. \r\n\r\n- **Straightforward**. An easy to use client suitable for direct use, or as an engine for higher level abstractions.\r\n\r\n- **Complete**. A full reference implementation of the Nakadi API for producers and consumers.\r\n\r\n- **Robust**. HTTP request/responses and consumer stream handling recovers from common connection and server problems.\r\n\r\n- **Minimal Dependencies**. No dependency on heavyweight frameworks or libraries, the sole dependency is on the SLF4J API.\r\n\r\n- **Operations Friendly**. Error handling, logging and instrumentation are given the same importance as functionality.\r\n\r\n----\r\n\r\n## Using the Client\r\n\r\nCreating a client is as simple as: \r\n\r\n```java\r\nNakadiClient client = NakadiClient.newBuilder()\r\n  .baseURI(\"http://localhost:9080\")\r\n  .build();\r\n```\r\n\r\nWith that you can post type safe events:\r\n\r\n```java\r\nDataChangeEvent<PriorityRequisition> dce1 = new DataChangeEvent<PriorityRequisition>()\r\n  .metadata(new EventMetadata())\r\n  .op(DataChangeEvent.Op.C)\r\n  .data(new PriorityRequisition(\"24\"));\r\n\r\nDataChangeEvent<PriorityRequisition> dce2 = new DataChangeEvent<PriorityRequisition>()\r\n  .metadata(new EventMetadata())\r\n  .op(DataChangeEvent.Op.C)\r\n  .data(new PriorityRequisition(\"24\"));\r\n \r\nResponse batch = resource.send(\"priority-requisitions\", dce1, dce2);\r\n```\r\n\r\nAnd consume events from the stream with just a few lines of code:\r\n\r\n```java\r\nStreamConfiguration configuration = new StreamConfiguration()\r\n    .subscriptionId(\"27302800-bc68-4026-a9ff-8d89372f8473\");\r\n\r\nStreamProcessor processor = client.resources().streamBuilder(configuration)\r\n    .streamObserverFactory(new LoggingStreamObserverProvider())\r\n    .build();\r\n\r\nprocessor.start();\r\n```\r\n\r\nSee the [Readme](https://github.com/dehora/nakadi-java#nakadi-java) for more details and examples.\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}